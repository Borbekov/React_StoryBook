{"version":3,"sources":["actions/authActions.js","components/navbar/SignedInLink.js","components/navbar/SignedOutLink.js","components/navbar/Navbar.js","components/board/Notification.js","components/story/StorySummary.js","components/story/StoriesList.js","components/board/Board.js","components/story/StoryDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","actions/storyActions.js","components/story/CreateStory.js","App.js","serviceWorker.js","reducers/authReducer.js","reducers/storyReducer.js","reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["signIn","logging","dispatch","getState","_ref","getFirebase","auth","signInWithEmailAndPassword","email","password","then","type","catch","error","payload","signOut","_ref2","signUp","newUser","_ref3","getFirestore","firebase","firestore","createUserWithEmailAndPassword","response","collection","doc","user","uid","set","firstName","secondName","initials","connect","bindActionCreators","props","react_default","a","createElement","className","react_router_dom","to","onClick","SignedOutLink","state","console","log","profile","links","navbar_SignedInLink","navbar_SignedOutLink","Notification","notifications","map","notification","key","id","content","moment","time","toDate","fromNow","StorySummary","story","style","marginBottom","title","createdAt","calendar","class","StoriesList","stories","story_StorySummary","Board","_this$props","this","story_StoriesList","board_Notification","react_router","Component","compose","ordered","firestoreConnect","orderBy","limit","ownProps","match","params","data","SignIn","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","authError","onSubmit","htmlFor","onChange","SignUp","createStory","add","objectSpread","authorId","Date","CreateStory","history","push","App","window","innerWidth","innerHeight","marginTop","navbar_Navbar","exact","path","component","StoryDetails","Boolean","location","hostname","initState","authReducer","arguments","length","undefined","action","message","storyReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","firebaseConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1280272e.chunk.js","sourcesContent":["export const signIn = logging => {\n  return (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase();\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(logging.email, logging.password)\n      .then(() => {\n        dispatch({\n          type: \"LOGIN_SUCCESS\"\n        });\n      })\n      .catch(error => {\n        dispatch({\n          type: \"LOGIN_ERROR\",\n          payload: error\n        });\n      });\n  };\n};\n\nexport const signOut = () => {\n  return (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase();\n    firebase\n      .auth()\n      .signOut()\n      .then(() => {\n        dispatch({\n          type: \"SIGNOUT_SUCCESS\"\n        });\n      });\n  };\n};\n\nexport const signUp = newUser => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(newUser.email, newUser.password)\n      .then(response => {\n        return firestore\n          .collection(\"users\")\n          .doc(response.user.uid)\n          .set({\n            firstName: newUser.firstName,\n            secondName: newUser.secondName,\n            initials: newUser.firstName[0] + newUser.secondName[0]\n          });\n      })\n      .then(() => {\n        dispatch({\n          type: \"SIGNUP_SUCCESS\"\n        });\n      })\n      .catch(error => {\n        dispatch({\n          type: \"SIGNUP_ERROR\",\n          payload: error\n        });\n      });\n  };\n};\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { signOut } from \"../../actions/authActions\";\n\nconst SignedInLink = props => {\n  return (\n    <ul className=\"right\">\n      <li>\n        <NavLink to=\"/create\">New Story</NavLink>\n      </li>\n      <li>\n        <a onClick={() => props.signOut()}>Log Out</a>\n      </li>\n      <li>\n        <NavLink to=\"/\" className=\"btn btn-floating blue-grey z-depth-0\">\n          <div className=\"white-text\">{props.initials}</div>\n        </NavLink>\n      </li>\n    </ul>\n  );\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators(\n    {\n      signOut\n    },\n    dispatch\n  );\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(SignedInLink);\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst SignedOutLink = () => {\n  return (\n    <ul className=\"right hide-on-med-and-down\">\n      <li>\n        <NavLink to=\"/signup\">Sign Up</NavLink>\n      </li>\n      <li>\n        <NavLink to=\"/signin\">Login</NavLink>\n      </li>\n    </ul>\n  );\n};\n\nexport default SignedOutLink;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport SignedInLink from \"./SignedInLink\";\nimport SignedOutLink from \"./SignedOutLink\";\nimport { connect } from \"react-redux\";\n\nconst Navbar = props => {\n  const links = props.auth.uid ? (\n    <SignedInLink initials={props.profile.initials} />\n  ) : (\n    <SignedOutLink />\n  );\n  return (\n    <nav>\n      <div className=\"nav-wrapper red lighten-1\">\n        <div className=\"container\">\n          <Link to=\"/\" className=\"brand-logo\">\n            StoriesBook\n          </Link>\n          {links}\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    auth: state.firebase.auth,\n    profile: state.firebase.profile\n  };\n};\n\nexport default connect(mapStateToProps)(Navbar);\n","import React from \"react\";\nimport moment from \"moment\";\n\nconst Notification = ({ notifications }) => {\n  return (\n    <div className=\"card blue-grey darken-1\">\n      <div className=\"card-content white-text\">\n        <span className=\"card-title\">Notifications</span>\n        <ul>\n          {notifications &&\n            notifications.map(notification => (\n              <li key={notification.id}>\n                <span className=\"yellow-text\">{notification.user} </span>\n                <span>{notification.content}</span>\n                <p className=\"grey-text\">\n                  {moment(notification.time.toDate()).fromNow()}\n                </p>\n              </li>\n            ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default Notification;\n","import React from \"react\";\nimport moment from \"moment\";\n\nconst StorySummary = ({ story }) => {\n  return (\n    <div className=\"card blue-grey darken-1\" style={{ marginBottom: \"20px\" }}>\n      <div className=\"card-content white-text\">\n        <span className=\"card-title\">{story.title}</span>\n        <p>\n          Posted by {story.firstName} {story.secondName}\n        </p>\n        <p className=\"grey-text\">\n          {moment(story.createdAt.toDate()).calendar()}\n        </p>\n      </div>\n      <a className=\"btn-floating btn-small halfway-fab red lighten-1\">\n        <i class=\"material-icons\">zoom_out_map</i>\n      </a>\n    </div>\n  );\n};\n\nexport default StorySummary;\n","import React from \"react\";\nimport StorySummary from \"./StorySummary\";\nimport { Link } from \"react-router-dom\";\n\nconst StoriesList = ({ stories }) => {\n  return (\n    <div className=\"scroll-div\">\n      {stories &&\n        stories.map(story => (\n          <Link to={\"/story/\" + story.id} key={story.id}>\n            <StorySummary story={story} />\n          </Link>\n        ))}\n    </div>\n  );\n};\n\nexport default StoriesList;\n","import React, { Component } from \"react\";\nimport Notification from \"./Notification\";\nimport StoriesList from \"../story/StoriesList\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport { Redirect } from \"react-router-dom\";\n\nclass Board extends Component {\n  render() {\n    const { stories, auth, notifications } = this.props;\n    if (!auth.uid) {\n      return <Redirect to=\"/signin\" />;\n    }\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col s12 m6\">\n            <StoriesList stories={stories} />\n          </div>\n          <div className=\"col s12 m5 offset-m1\">\n            <Notification notifications={notifications} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    stories: state.firestore.ordered.stories,\n    auth: state.firebase.auth,\n    notifications: state.firestore.ordered.notifications\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: \"stories\", orderBy: [\"createdAt\", \"desc\"] },\n    { collection: \"notifications\", limit: 3, orderBy: [\"time\", \"desc\"] }\n  ])\n)(Board);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport { Redirect } from \"react-router-dom\";\nimport moment from \"moment\";\n\nconst StoryDetails = props => {\n  const { story, auth } = props;\n  if (!auth.uid) {\n    return <Redirect to=\"/signin\" />;\n  }\n\n  if (story) {\n    return (\n      <div className=\"container\">\n        <div className=\"card blue-grey darken-1\">\n          <div className=\"card-content white-text\">\n            <span className=\"card-title\">{story.title}</span>\n            <p>{story.content}</p>\n          </div>\n          <div className=\"card-action white-text\">\n            <div>\n              Posted by {story.firstName} {story.secondName}\n            </div>\n            <div>{moment(story.createdAt.toDate()).calendar()}</div>\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"container center\">\n        <p>Loading story...</p>\n      </div>\n    );\n  }\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const id = ownProps.match.params.id;\n  const stories = state.firestore.data.stories;\n  const story = stories ? stories[id] : null;\n  return {\n    story: story,\n    auth: state.firebase.auth\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([{ collection: \"stories\" }])\n)(StoryDetails);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { signIn } from \"../../actions/authActions\";\nimport { Redirect } from \"react-router-dom\";\n\nclass SignIn extends Component {\n  state = {\n    email: \"\",\n    password: \"\"\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.id]: e.target.value\n    });\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.signIn(this.state);\n  };\n\n  render() {\n    const { authError, auth } = this.props;\n    if (auth.uid) {\n      return <Redirect to=\"/\" />;\n    }\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit}>\n          <h5 className=\"white-text\">Sign In</h5>\n          <div className=\"input-field\">\n            <i className=\"material-icons prefix\">email</i>\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <i className=\"material-icons prefix\">lock</i>\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn red lighten-1\">Login</button>\n            {authError && <div className=\"red-text center\">{authError}</div>}\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    authError: state.auth.authError,\n    auth: state.firebase.auth\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators(\n    {\n      signIn\n    },\n    dispatch\n  );\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SignIn);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { signUp } from \"../../actions/authActions\";\n\nclass SignUp extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    firstName: \"\",\n    secondName: \"\"\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.id]: e.target.value\n    });\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.signUp(this.state);\n  };\n\n  render() {\n    const { auth, authError } = this.props;\n    if (auth.uid) {\n      return <Redirect to=\"/\" />;\n    }\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit}>\n          <h5 className=\"white-text\">Sign Up</h5>\n          <div className=\"input-field\">\n            <i className=\"material-icons prefix\">email</i>\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <i className=\"material-icons prefix\">lock</i>\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <i className=\"material-icons prefix\">account_circle</i>\n            <label htmlFor=\"firstName\">First Name</label>\n            <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <i className=\"material-icons prefix\">account_circle</i>\n            <label htmlFor=\"secondName\">Last Name</label>\n            <input type=\"text\" id=\"secondName\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn red lighten-1\">Sign Up</button>\n            {authError && <div className=\"red-text center\">{authError}</div>}\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.firebase.auth,\n    authError: state.auth.authError\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators(\n    {\n      signUp\n    },\n    dispatch\n  );\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SignUp);\n","const createStory = story => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    const firestore = getFirestore();\n    const profile = getState().firebase.profile;\n    const id = getState().firebase.auth.uid;\n    firestore\n      .collection(\"stories\")\n      .add({\n        ...story,\n        firstName: profile.firstName,\n        secondName: profile.secondName,\n        authorId: id,\n        createdAt: new Date()\n      })\n      .then(() => {\n        dispatch({\n          type: \"CREATE_STORY\",\n          payload: story\n        });\n      })\n      .catch(error => {\n        dispatch({\n          type: \"CREATE_STORY_ERROR\",\n          payload: error\n        });\n      });\n  };\n};\n\nexport default createStory;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport createStory from \"../../actions/storyActions\";\nimport { Redirect } from \"react-router-dom\";\n\nclass CreateStory extends Component {\n  state = {\n    title: \"\",\n    content: \"\"\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.id]: e.target.value\n    });\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.createStory(this.state);\n    this.props.history.push(\"/\");\n  };\n\n  render() {\n    const { auth } = this.props;\n    if (!auth.uid) {\n      return <Redirect to=\"/signin\" />;\n    }\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit}>\n          <h5 className=\"white-text\">Create Story</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"title\">Title</label>\n            <input type=\"text\" id=\"title\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"content\">Content</label>\n            <textarea\n              id=\"content\"\n              className=\"materialize-textarea\"\n              onChange={this.handleChange}\n            />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn red lighten-1\">Create</button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.firebase.auth\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators(\n    {\n      createStory\n    },\n    dispatch\n  );\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CreateStory);\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Navbar from \"./components/navbar/Navbar\";\nimport Board from \"./components/board/Board\";\nimport StoryDetails from \"./components/story/StoryDetails\";\nimport SignIn from \"./components/auth/SignIn\";\nimport SignUp from \"./components/auth/SignUp\";\nimport CreateStory from \"./components/story/CreateStory\";\n\nconst App = () => {\n  if (window.innerWidth < 995 && window.innerHeight < 591) {\n    return (\n      <div className=\"mobile-msg\">\n        <div\n          className=\"container center red-text\"\n          style={{ marginTop: \"15px\" }}\n        >\n          This web app is not fully adaptive. Please, open with laptop, tablet\n          (landscape mode) or PC.\n        </div>\n      </div>\n    );\n  }\n  return (\n    <BrowserRouter>\n      <div>\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\" component={Board} />\n          <Route path=\"/story/:id\" component={StoryDetails} />\n          <Route path=\"/signin\" component={SignIn} />\n          <Route path=\"/signup\" component={SignUp} />\n          <Route path=\"/create\" component={CreateStory} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n  authError: null\n};\n\nconst authReducer = (state = initState, action) => {\n  switch (action.type) {\n    case \"LOGIN_ERROR\":\n      return {\n        ...state,\n        authError: \"Login Failed!\"\n      };\n    case \"LOGIN_SUCCESS\":\n      return {\n        ...state,\n        authError: null\n      };\n    case \"SIGNOUT_SUCCESS\":\n      console.log(\"SIGN OUT\");\n      return state;\n    case \"SIGNUP_SUCCESS\":\n      console.log(\"SIGNUP_SUCCESS\");\n      return {\n        ...state,\n        authError: null\n      };\n    case \"SIGNUP_ERROR\":\n      console.log(\"SIGNUP_ERROR \", action.payload.message);\n      return {\n        ...state,\n        authError: action.payload.message\n      };\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","const initState = {\n  stories: [\n    { id: \"1\", title: \"Help me\", content: \"Help me Help me Help me\" },\n    { id: \"2\", title: \"Thank you\", content: \"Thank you Thank you Thank you\" },\n    { id: \"3\", title: \"My name\", content: \"My name My name My name\" }\n  ]\n};\n\nconst storyReducer = (state = initState, action) => {\n  switch (action.type) {\n    case \"CREATE_STORY\":\n      console.log(\"STORY \", action.payload);\n      return state;\n    case \"CREATE_STORY_ERROR\":\n      console.log(\"Error create \", action.payload);\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport default storyReducer;\n","import authReducer from \"./authReducer\";\nimport storyReducer from \"./storyReducer\";\nimport { combineReducers } from \"redux\";\nimport { firestoreReducer } from \"redux-firestore\";\nimport { firebaseReducer } from \"react-redux-firebase\";\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  story: storyReducer,\n  firestore: firestoreReducer,\n  firebase: firebaseReducer\n});\n\nexport default rootReducer;\n","import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\n// Initialize Firebase\nvar firebaseConfig = {\n  apiKey: \"AIzaSyDwcegbBc-O_ZsABqhoJG6iT13K2_z6dQM\",\n  authDomain: \"storiesbook-c05ca.firebaseapp.com\",\n  databaseURL: \"https://storiesbook-c05ca.firebaseio.com\",\n  projectId: \"storiesbook-c05ca\",\n  storageBucket: \"\",\n  messagingSenderId: \"365829858495\"\n  //appId: \"1:365829858495:web:7185582cd4a43d63\"\n};\n\nfirebase.initializeApp(firebaseConfig);\nfirebase.firestore().settings({});\n\nexport default firebase;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport rootReducer from \"./reducers/rootReducer\";\nimport thunk from \"redux-thunk\";\nimport { reduxFirestore, getFirestore } from \"redux-firestore\";\nimport { reactReduxFirebase, getFirebase } from \"react-redux-firebase\";\nimport firebaseConfig from \"./config/fbConfig\";\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reduxFirestore(firebaseConfig),\n    reactReduxFirebase(firebaseConfig, {\n      useFirestoreForProfile: true,\n      userProfile: \"users\",\n      attachAuthIsReady: true\n    })\n  )\n);\n\nstore.firebaseAuthIsReady.then(() => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById(\"root\")\n  );\n});\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}